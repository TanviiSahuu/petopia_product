name: CI/CD FOR PRODUCT APP

on:
  push:
    branches:
      - main  # Change this if you have a different default branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # ðŸ›‘ Step 1: Checkout Repository
      - name: Checkout Repository
        uses: actions/checkout@v4

      # ðŸ›‘ Step 2: Set up Python (For Django migrations & collectstatic)
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'  # Adjust according to your project

      # ðŸ›‘ Step 3: Install Dependencies (Adjust paths if needed)
      - name: Install Dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install Minikube
        run: |
         curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
         sudo install minikube-linux-amd64 /usr/local/bin/minikube

      - name: Start Minikube
        run: |
         minikube start --driver=docker
         minikube status


      # ðŸ›‘ Step 4: Load Kubeconfig (Required for Kubernetes Deployment)
      - name: Setup Kubeconfig
        run: |
         mkdir -p $HOME/.kube
         echo "${{ secrets.KUBECONFIG }}" | base64 --decode > $HOME/.kube/config
        shell: bash


      # ðŸ›‘ Step 5: Log in to Docker Hub (Optional: Needed only if pushing images)
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}  # ðŸ‘‰ Insert in GitHub Secrets
          password: ${{ secrets.DOCKER_PASSWORD }}  # ðŸ‘‰ Insert in GitHub Secrets

      # ðŸ›‘ Step 6: Build & Push Docker Images for Microservices
      - name: Build & Push Docker Images
        run: |
          docker build -t tanviisahuu/petopia_product:latest .

          docker push tanviisahuu/petopia_product:latest

      # ðŸ›‘ Step 7: Apply Kubernetes Manifests
      # - name: Deploy to Minikube
      #   run: |
      #     kubectl apply -f p-deployment.yml
      #     kubectl apply -f p-service.yml

      #     kubectl apply -f ingress.yml

      # ðŸ›‘ Step 8: Verify Deployment
      # - name: Verify Deployment
      #   run: |
      #     kubectl get pods -n default
      #     kubectl get services -n default
